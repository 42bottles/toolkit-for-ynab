#!/usr/bin/env bash

set -e

# Check our code style with jscs.
npm run jscs || exit

# Populate feature files like feed changes by reading thorugh the code and hooking up
# all the calls we need, as well as processing settings files
python populateFeaturesFiles.py

# Transpile the source/ directory, putting the files in src/ which is where Kango expects to see them.
rm -rf src
npm run babel || exit

# Copy any non JS files across that babel didn't bring with it. Ignore existing files we just transpiled.
rsync -r --ignore-existing source/* src/

if hash python2 2>/dev/null; then
  python2 lib/kango-framework-latest/kango.py build .
else
  python lib/kango-framework-latest/kango.py build .
fi
echo test;

# The safari icon needs to be different than the other browsers. Move it into place.
echo "[   INFO] Moving Safari extension icons into place..."
pushd output/safari/*.safariextension/icons > /dev/null
  rm -f button.png
  mv button-safari.png button.png
  cp ../../../../src/common/icons/button-safari@2x.png button@2x.png
  rm button-safari@2x.png
popd > /dev/null

# Clean up.
rm -rf src
